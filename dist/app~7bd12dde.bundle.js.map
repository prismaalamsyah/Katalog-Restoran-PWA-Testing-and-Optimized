{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,ovNAIA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA8BF,QA3B2B,CACnBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJ5B,EAKxB,EACME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOX,IAAiB,0CADzB,EAE1B,EACMY,cAAa,SAACC,GAAY,oGAEzBA,EAAWC,eAAe,MAAO,CAAF,gEAItBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAN5B,EAOhC,EACMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,EAEMS,kBAAiB,SAACC,GAAO,sIAE/B,gDC7BF,QANqB,CACnBC,SAAU,GAAF,OAAKrB,EAAAA,EAAAA,SAAe,QAC5BsB,UAAW,GAAF,OAAKtB,EAAAA,EAAAA,SAAe,UAC7BuB,OAAQ,SAACb,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCJhD,irOAgCA,QA/BmB,yBADnB,4FACmB,SADnB,QAwBG,EANA,EANA,EANA,EALgB,EA6BhB,OA9BH,EACmB,OADnB,EACmB,+CACjB,sGACyBc,MAAMC,EAAAA,UAAsB,OAArC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,qFAED,WAAyBnB,GAAE,yFACFc,MAAMC,EAAAA,OAAoBf,IAAI,OAAvC,OAARgB,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAab,YAAU,2CAC/B,0FAED,WAA6BL,GAAE,yFACNc,MAAMC,EAAAA,OAAoBf,IAAI,OAAvC,OAARgB,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAab,WAAWe,MAAMC,OAAK,2CAC3C,2FAED,WAA8BrB,GAAE,yFACPc,MAAMC,EAAAA,OAAoBf,IAAI,OAAvC,OAARgB,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAab,WAAWe,MAAME,QAAM,2CAC5C,0FAED,WAA6BtB,GAAE,yFACNc,MAAMC,EAAAA,OAAoBf,IAAI,OAAvC,OAARgB,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAab,WAAWkB,iBAAe,2CAC/C,+CA9BH,6DA8BG,EA7BgB,mCCQnB,QAVe,CACbC,SAAU,uCACVC,eAAgB,qDAChBC,iBAAkB,QAClBC,YAAY,IAAIC,MAAOC,cACvBxC,cAAe,sBACfE,iBAAkB,EAClBC,kBAAmB,yFCEfsC,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,mBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF,IAEAC,KAAO,SAACC,GAAM,OAAKA,EAAM,OAAQ","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/resto-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable no-empty-function */\n/* eslint-disable consistent-return */\nimport { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst favoriteRestaurant = {\n  async getRestaurant(id) {\n    if (!id) {\n      return;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllRestaurants() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putRestaurant(restaurant) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!restaurant.hasOwnProperty('id')) {\n      return;\n    }\n    // eslint-disable-next-line consistent-return\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n  },\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n  // eslint-disable-next-line no-unused-vars\n  async searchRestaurants(query) {\n\n  },\n};\n\nexport default favoriteRestaurant;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  getResto: `${CONFIG.BASE_URL}list`,\n  getReview: `${CONFIG.BASE_URL}review`,\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass restoDbSource {\n  static async getDataRestaurant() {\n    const response = await fetch(API_ENDPOINT.getResto);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async detailResto(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    const responseJson = await response.json();\n    return responseJson.restaurant;\n  }\n\n  static async detailRestoFood(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    const responseJson = await response.json();\n    return responseJson.restaurant.menus.foods;\n  }\n\n  static async detailRestoDrink(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    const responseJson = await response.json();\n    return responseJson.restaurant.menus.drinks;\n  }\n\n  static async customerReviews(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    const responseJson = await response.json();\n    return responseJson.restaurant.customerReviews;\n  }\n}\nexport default restoDbSource;\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\n  DEFAULT_LANGUAGE: 'en-us',\n  CACHE_NAME: new Date().toISOString(),\n  DATABASE_NAME: 'restaurant-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restaurant',\n};\n\nexport default CONFIG;\n","import 'regenerator-runtime';\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport filter from 'lodash.filter';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#navigationDrawer'),\n  content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n\nfilter((module) => module.default);\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","getResto","getReview","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","menus","foods","drinks","customerReviews","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister","filter","module"],"sourceRoot":""}